tonumeric = function(x){
x_num = as.numeric(as.character(x))
return(x_num)
}
df = data.frame(
x = rep(c(0, 1, 2, 3, 4, 5, 6), 6),
y = rep(c(0, 1, 2, 3, 4, 5), 7),
z = rnorm(42)
)
View(df)
View(df)
class(df$x)
as.factor(df$x)
class(df$x)
df <- df %>%
mutate(x = as.factor(x))
library(dplyr)
df <- df %>%
mutate(x = as.factor(x))
class(df$x)
df <- df %>%
mutate(x = tonumeric(x))
class(df$x)
#' Convert factors to numeric vectors
#'
#' Converts factors to numeric vectors without changing original values
#'
#' @param x variable to be converted
#'
#' @return numeric vector
#'
#' @export
to_numeric = function(x){
x_num = as.numeric(as.character(x))
return(x_num)
}
document(to_numeric())
??document
#' Convert factors to numeric vectors
#'
#' Converts factors to numeric vectors without changing original values
#'
#' @param x variable to be converted
#'
#' @return numeric vector
#'
#' @export
to_numeric = function(x){
x_num = as.numeric(as.character(x))
return(x_num)
}
library(devtools)
document()
df <- data.frame(
x = rep(c(0, 1, 2, 3, 4, 5, 6), 6),
y = rep(c(0, 1, 2, 3, 4, 5), 7),
z = rnorm(42)
)
# run this to update package with new functions
devtools::document()
?stringr
??stringr
?str_add
# run this to update package with new functions
devtools::document()
# run this to update package with new functions
devtools::document()
# run this to update package with new functions
devtools::document()
